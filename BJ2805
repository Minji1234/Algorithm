import java.io.*;
import java.util.*;

public class BJ2805 { // Binary Search
	public static void main(String[] args) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int treeNum = Integer.parseInt(st.nextToken());
		int wanted = Integer.parseInt(st.nextToken());
		int[] trees = new int[treeNum+1];
		st = new StringTokenizer(br.readLine());
		for (int i = 1; i <= treeNum; i++)
		{
			trees[i] = Integer.parseInt(st.nextToken());
		}
		
		
		int start = 0;
		int end = 2000000000;
		int mid = (start + end)/2;
		int heighest = 0;
		while (start <= end)
		{
			long tmp = 0; // As sum of pieces of trees can be larger than Integer.MAX_VALUE.
			mid = (start + end)/2;
			for (int i = 1; i <= treeNum; i++)
			{
				if (mid <= trees[i])
				{
					tmp += trees[i] - mid;
				}
			}
			if (tmp >= wanted)
			{
				if (heighest < mid)
				{
					heighest = mid;
				}
				start = mid + 1;
			}
			else
			{
				end = mid - 1;
			}
		}
		System.out.println(heighest);
	}
}
